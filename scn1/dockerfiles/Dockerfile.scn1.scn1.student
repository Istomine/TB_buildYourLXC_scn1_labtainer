#
# Labtainer Dockerfile
#
#  This is the default Labtainer Dockerfile template, plesae choose the appropriate
#  base image below.
#
# The labtainer.base image includes the following packages:
#    build-essential  expect  file  gcc-multilib  gdb  iputils-ping  less  man  manpages-dev 
#    net-tools  openssh-client  python  sudo  tcl8.6  vim  zip  hexedit  rsyslog
#
# The labtainer.network image adds the following packages:
#   openssl openssh-server openvpn wget tcpdump  update-inetd  xinetd
#
ARG registry
FROM $registry/labtainer.base2
#FROM $registry/labtainer.network
#FROM $registry/labtainer.centos
#FROM $registry/labtainer.lamp
#
#  lab is the fully qualified image name, e.g., mylab.some_container.student
#  labdir is the name of the lab, e.g., mylab 
#  imagedir is the name of the container
#  user_name is the USER from the start.config, if other than ubuntu,
#            then that user must be added in this dockerfile
#            before the USER command
#
ARG lab
ARG labdir
ARG imagedir
ARG user_name
ARG password
ARG apt_source
ARG version
LABEL version=$version
ENV APT_SOURCE $apt_source
RUN /usr/bin/apt-source.sh
#
#  Mise a jour et installation des programmes
   RUN apt-get update && \
       apt-get install -y --no-install-recommends uidmap wget g++
       
# Installation du filesystem et de l'antivirus
   RUN wget -O /ubuntu-base-24.10-base-amd64.tar.gz https://cdimage.ubuntu.com/ubuntu-base/releases/24.10/release/ubuntu-base-24.10-base-amd64.tar.gz 
   RUN wget -O /main.tar.gz https://github.com/Istomine/TB_buildYourLXC_scn1/archive/main.tar.gz
#
#
#
# Install the system files found in the _system directory
#
ADD $labdir/$imagedir/sys_tar/sys.tar /
ADD $labdir/sys_$lab.tar.gz /

# Creation de l'utilisateur base 
RUN useradd -ms /bin/bash $user_name
RUN echo "$user_name:$password" | chpasswd
RUN adduser $user_name sudo

# Creation de l'utilisateur self
RUN useradd -ms /bin/bash self
RUN echo "self:self" | chpasswd

# Creation de l'utilisateur host_SuperAdmin
RUN useradd -s /bin/bash host_SuperAdmin

# Mise en place du filesystem
RUN mkdir /home/base/ubuntu_base
RUN tar -xzf /ubuntu-base-24.10-base-amd64.tar.gz -C /home/base/ubuntu_base
RUN mkdir /home/base/ubuntu_base/home/base /home/base/ubuntu_base/home/self
RUN chown base:base -R /home/base/ubuntu_base
RUN chown self:self -R /home/base/ubuntu_base/home/self
RUN rm ubuntu-base*.gz

# Mise en place de l'antivirus
RUN tar -xzf /main.tar.gz -C /home/base
RUN rm main.tar.gz
RUN g++ -std=c++17 /home/base/TB_buildYourLXC_scn1-main/src/main.cpp -o /home/base/antivirus
RUN rm -R /home/base/TB_buildYourLXC_scn1-main
RUN chown base:base /home/base/antivirus

# Mise en place des utilisateurs dans le filesystem
RUN echo "self:x:1000:1000::/home/self:/bin/bash" >> /home/base/ubuntu_base/etc/passwd
RUN echo "container_superAdmin:x:1005:1005::/home/container_superAdmin:/bin/bash" >> /home/base/ubuntu_base/etc/passwd

RUN echo "self:$6$hl7OiqmYqTB2XZb4$D.9RQBlFLBTafhrL9agtGkyLg7Gd7S9DcgAUEJGUyCUmGLtDvH6JYm5XYlmUVX1yGKlG4NZ.g2N4oOEVc.Ksr/:20212:0:99999:7:::" >> /home/base/ubuntu_base/etc/shadow
RUN echo "container_superAdmin:$6$pjoB2jyrWxJBgeb9$mXRG5LQ/ZX0O3bvcpXyEwNHmPXUp7yVMFZ5y47ZEaJ8NzZVR38PXRbZwgxdCgR.KszUJXw044tdH7PpfEaWFD1:20212:0:99999:7:::" >> /home/base/ubuntu_base/etc/shadow

RUN echo "self:x:1000:" >> /home/base/ubuntu_base/etc/group
RUN echo "container_superAdmin:x:1005:" >> /home/base/ubuntu_base/etc/group

RUN echo "self:!::" >> /home/base/ubuntu_base/etc/gshadow
RUN echo "container_superAdmin:!::" >> /home/base/ubuntu_base/etc/gshadow

# Creation des repertoires requis .ssh pour l'evaluation
RUN mkdir -p \
    /home/base/.ssh \
    /home/self/.ssh \
    /home/base/ubuntu_base/home/base/.ssh \
    /home/base/ubuntu_base/home/self/.ssh

# Generation des clés RSA pour /home/base/.ssh
RUN ssh-keygen -t rsa -b 4096 -f /home/base/.ssh/id_rsa -N "" && \
    chmod 700 /home/base/.ssh && \
    chmod 600 /home/base/.ssh/id_rsa /home/base/.ssh/id_rsa.pub

# Generation des clés ED25519 pour /home/self/.ssh
RUN ssh-keygen -t ed25519 -f /home/self/.ssh/id_ed25519 -N "" && \
    chmod 700 /home/self/.ssh && \
    chmod 600 /home/self/.ssh/id_ed25519 /home/self/.ssh/id_ed25519.pub

# Generation des clés RSA pour /home/base/ubuntu_base/home/base/.ssh
RUN ssh-keygen -t rsa -b 4096 -f /home/base/ubuntu_base/home/base/.ssh/id_rsa -N "" && \
    chmod 700 /home/base/ubuntu_base/home/base/.ssh && \
    chmod 600 /home/base/ubuntu_base/home/base/.ssh/id_rsa /home/base/ubuntu_base/home/base/.ssh/id_rsa.pub

# Generation des clés ED25519 pour /home/base/ubuntu_base/home/self/.ssh
RUN ssh-keygen -t ed25519 -f /home/base/ubuntu_base/home/self/.ssh/id_ed25519 -N "" && \
    chmod 700 /home/base/ubuntu_base/home/self/.ssh && \
    chmod 600 /home/base/ubuntu_base/home/self/.ssh/id_ed25519 /home/base/ubuntu_base/home/self/.ssh/id_ed25519.pub

# Changement de proprietaire car les dossiers appartiennet a root
RUN chown base:base -R /home/base/.ssh
RUN chown self:self -R /home/self/.ssh
RUN chown base:base -R /home/base/ubuntu_base/home/base/.ssh
RUN chown self:self -R /home/base/ubuntu_base/home/self/.ssh

# Service pour surveiller bash_history dans le host
RUN printf '[Unit]\nDescription=Hachage du fichier .bash_history dans host\n\n[Service]\nType=oneshot\nUser=base\nGroup=base\nExecStart=/home/base/.hash_script/hash_bash_history_1.sh\n' > /etc/systemd/system/hash_bash_history_1.service
      
RUN printf '[Unit]\nDescription=Surveillance du fichier .bash_history dans host\n\n[Path]\nPathModified=/home/base/.bash_history\nUnit=hash_bash_history_1.service\n\n[Install]\nWantedBy=multi-user.target\n' > /etc/systemd/system/hash_bash_history_1.path
      
RUN ln -s /etc/systemd/system/hash_bash_history_1.path \
         /etc/systemd/system/multi-user.target.wants/hash_bash_history_1.path


# Service pour surveiller bash_history dans le conteneur
RUN printf '[Unit]\nDescription=Hachage du fichier .bash_history dans conteneur\n\n[Service]\nType=oneshot\nUser=base\nGroup=base\nExecStart=/home/base/.hash_script/hash_bash_history_2.sh\n' > /etc/systemd/system/hash_bash_history_2.service

RUN printf '[Unit]\nDescription=Surveillance du fichiers .bash_history dans conteneur\n\n[Path]\nPathModified=/home/base/ubuntu_base/home/base/.bash_history\nUnit=hash_bash_history_2.service\n\n[Install]\nWantedBy=multi-user.target\n' > /etc/systemd/system/hash_bash_history_2.path

RUN ln -s /etc/systemd/system/hash_bash_history_2.path \
         /etc/systemd/system/multi-user.target.wants/hash_bash_history_2.path
#
#  **** Perform all root operations, e.g.,           ****
#  **** "apt-get install" prior to the USER command. ****
#
USER $user_name
ENV HOME /home/$user_name

# Configuration du bash_history pour le conteneur self-made
RUN echo "export HISTFILE=/home/base/.bash_history" >> /home/base/.bashrc 
RUN echo "export PROMPT_COMMAND='history -a'" >> /home/base/.bashrc 
RUN touch /home/base/ubuntu_base/home/base/.bash_history
RUN chmod o+rw /home/base/ubuntu_base/home/base/.bash_history

# Creation du dossier pour les etudiants
RUN mkdir /home/base/results

RUN mkdir /home/base/Documents
RUN touch /home/base/Documents/password.txt /home/base/Documents/corrige_lab1.txt
RUN mkdir /home/base/ubuntu_base/home/base/Documents
RUN touch /home/base/ubuntu_base/home/base/Documents/gaps_code.html /home/base/ubuntu_base/home/base/Documents/te1.txt
#
# Install files in the user home directory
#
ADD $labdir/$imagedir/home_tar/home.tar $HOME
# remove after docker fixes problem with empty tars
RUN rm -f $HOME/home.tar
ADD $labdir/$lab.tar.gz $HOME


#
#  The first thing that executes on the container.
#
USER root
CMD ["/bin/bash", "-c", "exec /sbin/init --log-target=journal 3>&1"]

